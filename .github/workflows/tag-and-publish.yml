name: Tag and publish

# Note: Adapted from terra-data-catalog.
# For future functionality like 'publish to Artifactory', 'push to GCR', ..., see the data catalog version of this file.

on:
  push:
    branches: [ main ]
    paths-ignore: [ '*.md' ]

env:
  SERVICE_NAME: cbas-ui
  GOOGLE_PROJECT: broad-dsp-gcr-public

jobs:
  tag-and-publish-job:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Fetch that a Jira ID from the commit message
        id: fetch-jira-id
        run: |
          JIRA_ID=$(echo '${{ github.event.head_commit.message }}' | grep -Eo '\[?[A-Z][A-Z]+-[0-9]+\]?')
          [[ -z "$JIRA_ID" ]] && { echo "No Jira ID found in $1" ; exit 1; }
          echo ::set-output name=JIRA_ID::${JIRA_ID}

      - name: Checkout current code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BROADBOT_TOKEN }} # this allows the push to succeed later

      - name: Bump the tag to a new version
        # https://github.com/DataBiosphere/github-actions/tree/master/actions/bumper
        uses: databiosphere/github-actions/actions/bumper@bumper-0.0.6
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
          VERSION_FILE_PATH: package.json
          VERSION_LINE_MATCH: "^\\s*\"version\":"

      - name: Construct GCR image name
        id: image-name
        run: echo ::set-output name=GCR_NAME::us.gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ steps.tag.outputs.tag }}

      - name: Build Docker image
        run: docker build . --no-cache -t ${{ steps.image-name.outputs.GCR_NAME }}

      - name: Run Trivy vulnerability scanner
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.GCR_NAME }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v0

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v0'
        with:
          # Centralized in dsp-tools-k8s; ask in #dsp-devops-champions for help troubleshooting
          workload_identity_provider: 'projects/1038484894585/locations/global/workloadIdentityPools/github-wi-pool/providers/github-wi-provider'
          service_account: 'gcr-publish@broad-dsp-gcr-public.iam.gserviceaccount.com'

      - name: Explicitly auth Docker for GCR
        run: gcloud auth configure-docker --quiet

      - name: Push GCR image
        run: docker push ${{ steps.image-name.outputs.GCR_NAME }}

      - name: Clone Cromwhelm
        uses: actions/checkout@v2
        with:
          repository: broadinstitute/cromwhelm
          token: ${{ secrets.BROADBOT_TOKEN }}
          path: cromwhelm

      - name: Update CBAS UI version in helm chart in cromwhelm
        env:
          BROADBOT_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
        run: |
          set -e
          cd cromwhelm
          git checkout main
          ls -la
          HELM_CUR_TAG=$(grep "/cbas-ui:" terra-batch-libchart/values.yaml | sed "s,.*/cbas-ui:,,")
          HELM_NEW_TAG=${{ steps.tag.outputs.tag }}
          [[ -n "$HELM_CUR_TAG" && -n "$HELM_NEW_TAG" ]]
          # prefixing search and replacement text with 'cbas-ui' is needed to avoid replacing tag for cbas
          # when both cbas and cbas-ui have the same image version
          sed -i "s/cbas-ui:$HELM_CUR_TAG/cbas-ui:$HELM_NEW_TAG/" terra-batch-libchart/values.yaml
          git diff
          git config --global user.name "broadbot"
          git config --global user.email "broadbot@broadinstitute.org"
          git commit -am "${{ steps.fetch-jira-id.outputs.JIRA_ID }}: Auto update CBAS UI version to $HELM_NEW_TAG"
          git push https://broadbot:$BROADBOT_TOKEN@github.com/broadinstitute/cromwhelm.git main

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        # Needed by sonar to get the git history for the branch the PR will be merged into.
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
