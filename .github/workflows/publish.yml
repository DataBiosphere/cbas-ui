name: Publish and deploy

# Note: Adapted from terra-data-catalog.
# For future functionality like 'publish to Artifactory', 'push to GCR', ..., see the data catalog version of this file.

# 'create' means upon branch or tag creation, so the completion of the workflow
# in tag.yml - which creates a tag - implicitly kicks this one off.
# workflow_dispatch is for manual kickoff with a non-standard tag.
on:
  create:
  workflow_dispatch:
    inputs:
      tagOverride:
        description: 'Specify the tag to use for this publish'
        required: true
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ '**' ]
    paths-ignore:
      - 'README.md'

env:
  SERVICE_NAME: cbas-ui
  GOOGLE_PROJECT: broad-dsp-gcr-public

jobs:
  publish-job:
    if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.tagOverride != ''
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v2

      - name: Parse tag
        # Sets up a step output called TAG with the appropriate tag
        id: tag
        run: |
          TAG_OVERRIDE=${{ github.event.inputs.tagOverride }}
          if [[ ! -z "${TAG_OVERRIDE}" ]]
          then
            echo ::set-output name=TAG::${TAG_OVERRIDE}
          else
            echo ::set-output name=TAG::$(git describe --tags)
          fi

      - name: Construct GCR image name
        id: image-name
        run: echo ::set-output name=GCR_NAME::us.gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ steps.tag.outputs.TAG }}

      - name: Build Docker image
        run: docker build . --no-cache -t ${{ steps.image-name.outputs.GCR_NAME }}

      - name: Run Trivy vulnerability scanner
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.GCR_NAME }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v0

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v0'
        with:
          # Centralized in dsp-tools-k8s; ask in #dsp-devops-champions for help troubleshooting
          workload_identity_provider: 'projects/1038484894585/locations/global/workloadIdentityPools/github-wi-pool/providers/github-wi-provider'
          service_account: 'gcr-publish@broad-dsp-gcr-public.iam.gserviceaccount.com'

      - name: Explicitly auth Docker for GCR
        run: gcloud auth configure-docker --quiet

      - name: Push GCR image
        run: docker push ${{ steps.image-name.outputs.GCR_NAME }}

      - name: Clone Cromwhelm
        uses: actions/checkout@v2
        with:
          repository: broadinstitute/cromwhelm
          token: ${{ secrets.BROADBOT_TOKEN }}
          path: cromwhelm

      - name: Update CBAS UI version in helm chart in cromwhelm
        env:
          BROADBOT_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
        run: |
          set -e
          cd cromwhelm
          git checkout main
          ls -la
          HELM_CUR_TAG=$(grep "/cbas-ui:" terra-batch-libchart/values.yaml | sed "s,.*/cbas-ui:,,")
          HELM_NEW_TAG=${{ steps.tag.outputs.TAG }}
          [[ -n "$HELM_CUR_TAG" && -n "$HELM_NEW_TAG" ]]
          sed -i "s/$HELM_CUR_TAG/$HELM_NEW_TAG/" terra-batch-libchart/values.yaml
          git diff
          git config --global user.name "broadbot"
          git config --global user.email "broadbot@broadinstitute.org"
          git commit -am "Auto update CBAS UI version to $HELM_NEW_TAG"
          git push https://broadbot:$BROADBOT_TOKEN@github.com/broadinstitute/cromwhelm.git main

  sonarqube:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        # Needed by sonar to get the git history for the branch the PR will be merged into.
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube scan
        run: ./gradlew --build-cache sonarqube # Update this
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
